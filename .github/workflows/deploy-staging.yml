name: Deploy Staging

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: staging-deploy
  cancel-in-progress: false

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.100daysandbeyond.com
    if: >-
      ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'develop') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set deployment metadata
        id: meta
        run: |
          echo "tag=3033bfc" >> 
          echo "release_timestamp=2025-10-13T18:43:56Z" >> 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/backend.Dockerfile
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/ma-backend:staging
            ghcr.io/${{ github.repository_owner }}/ma-backend:${{ github.sha }}
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.tag }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/frontend.Dockerfile
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/ma-frontend:staging
            ghcr.io/${{ github.repository_owner }}/ma-frontend:${{ github.sha }}
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.tag }}

      - name: Install deployment tooling
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          python -m pip install --user --upgrade pip
          python -m pip install --user -r backend/requirements.txt
          curl -sLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.1/kustomize_v5.4.1_linux_amd64.tar.gz
          tar -xzf kustomize.tar.gz
          sudo mv kustomize /usr/local/bin/

      - name: Configure kubeconfig
        if: ${{ secrets.KUBE_CONFIG_STAGING != '' }}
        run: |
          mkdir -p /root/.kube
          echo "" | base64 --decode > /root/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_STAGING }}

      - name: Deploy manifests
        if: ${{ secrets.KUBE_CONFIG_STAGING != '' }}
        run: |
          kustomize edit set image backend-api=ghcr.io/${{ github.repository_owner }}/ma-backend:staging
          kustomize edit set image frontend-web=ghcr.io/${{ github.repository_owner }}/ma-frontend:staging
          kustomize build infra/k8s/overlays/staging | kubectl apply -f -
        working-directory: infra/k8s/overlays/staging

      - name: Run database migrations
        if: ${{ secrets.STAGING_DATABASE_URL != '' }}
        working-directory: backend
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          export ALEMBIC_CONFIG=alembic.ini
          alembic upgrade head

      - name: Verify backend rollout
        if: ${{ secrets.KUBE_CONFIG_STAGING != '' }}
        run: |
          kubectl rollout status deployment/backend-api -n staging --timeout=300s

      - name: Verify frontend rollout
        if: ${{ secrets.KUBE_CONFIG_STAGING != '' }}
        run: |
          kubectl rollout status deployment/frontend-web -n staging --timeout=300s

      - name: Publish deployment summary
        run: |
          cat <<'SUMMARY' >> 
          ## Staging deployment
          - Tag: ${{ steps.meta.outputs.tag }}
          - Timestamp: ${{ steps.meta.outputs.release_timestamp }}
          - Backend image: ghcr.io/${{ github.repository_owner }}/ma-backend:staging
          - Frontend image: ghcr.io/${{ github.repository_owner }}/ma-frontend:staging
          SUMMARY
